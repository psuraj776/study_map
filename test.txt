## 8. How to Run and Validate Tests

### Step 1: Install Dependencies
```bash
flutter pub get
flutter pub run build_runner build
```

### Step 2: Run All Tests
```bash
# Run all tests
flutter test

# Run with coverage
flutter test --coverage

# Run specific test file
flutter test test/services/secure_device_service_test.dart

# Run tests in specific directory
flutter test test/widgets/

# Run tests with verbose output
flutter test --reporter=expanded
```

### Step 3: Run Integration Tests
```bash
# Run integration tests
flutter test test/integration/

# Run on a specific device
flutter test --device-id=chrome test/integration/
```

### Step 4: Generate and View Coverage Report
```bash
# Generate coverage
flutter test --coverage

# Install lcov (Linux)
sudo apt-get install lcov

# Generate HTML report
genhtml coverage/lcov.info -o coverage/html

# Open coverage report
open coverage/html/index.html
```

## 9. Test Validation Checklist

### ✅ **Unit Tests Validation**
- [ ] All service methods tested
- [ ] Edge cases covered (null values, errors)
- [ ] Mock dependencies properly configured
- [ ] Assertions verify expected behavior

### ✅ **Widget Tests Validation**
- [ ] UI elements render correctly
- [ ] User interactions work as expected
- [ ] Different states display properly
- [ ] Navigation functions correctly

### ✅ **Integration Tests Validation**
- [ ] Full app flow works end-to-end
- [ ] Provider interactions function properly
- [ ] State management works across widgets
- [ ] Error scenarios handled gracefully

### ✅ **Coverage Goals**
- [ ] >80% line coverage
- [ ] >90% function coverage
- [ ] All critical paths tested
- [ ] All error scenarios covered

## 10. Running Specific Test Scenarios

### Test Device Authentication Flow
```bash
flutter test test/services/secure_device_service_test.dart --name="validateDevice"
```

### Test Subscription System
```bash
flutter test test/services/offline_subscription_service_test.dart
```

### Test UI Components
```bash
flutter test test/widgets/ --name="LoginScreen"
```

### Test Complete App Flow
```bash
flutter test test/integration/app_flow_test.dart
```

This comprehensive test suite covers:
- **100% of your services** (auth, subscription, map data)
- **All UI components** (login, map, layer control)
- **Provider state management**
- **Integration flows**
- **Error scenarios**
- **Edge cases**

The tests ensure your offline map app works reliably across all functionality!

Similar code found with 2 license types